on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".node-version"
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - run: pnpm i
      - run: pnpm build
      - run: node packages/coverage-viz/build.mjs
      - run: node packages/coverage-viz/build-monaco.mjs
      - run: pnpm -C packages/coverage-viz build-site
      - uses: actions/upload-artifact@v3
        with:
          name: site
          path: packages/coverage-viz/site

  deploy-cloudflare-pages:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: site
          path: site
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: cov
          directory: site
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-vercel:
    needs: build
    runs-on: ubuntu-latest

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: actions/download-artifact@v3
        with:
          name: site
          path: .vercel/output/static
      - run: |
          echo '{"version": 3}' > .vercel/output/config.json
      - name: Install Vercel CLI
        run: npm i -g vercel
      - name: Deploy Project Artifacts to Vercel (Preview)
        if: ${{ github.ref != 'refs/heads/main' }}
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel (Production)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
